{"version":3,"file":"static/js/76.e3ce62ad.chunk.js","mappings":"0PACA,GAAiB,E,SCMJA,EAAO,WAClB,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,GAAKC,EAAAA,EAAAA,MAkBX,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECC,EAAAA,EAAAA,IAAU,sCAADC,OACQb,EAAE,qBAAAa,OANjC,mCAM2D,oBAClE,KAAD,EAFKL,EAAQC,EAAAK,KAGdf,EAAeS,EAASO,KAAKC,MAAMP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEnCS,QAAQC,MAAM,gCAA+BV,EAAAQ,IAAS,yBAAAR,EAAAW,OAAA,GAAAb,EAAA,kBAEzD,kBATsB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAWvBnB,GACF,GAAG,CAACH,KAGFuB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,cAAkBH,UAChCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,WAAeH,SAAC,YAEjCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,UAAcH,SAC3B1B,EAAY8B,KAAI,SAAAC,GAAK,OACpBJ,EAAAA,EAAAA,KAAA,OAAAD,SACGK,EAAMC,cACLL,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,aAAiBH,UAC9BD,EAAAA,EAAAA,MAAA,MAAIG,UAAWC,EAAAA,aAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OACEM,IAAG,kCAAAlB,OAAoCgB,EAAMC,cAC7CE,IAAKH,EAAMI,QAEbR,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,UAAcH,SAAEK,EAAMI,SALAJ,EAAM7B,OAS9CyB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,aAAiBH,UAC9BD,EAAAA,EAAAA,MAAA,MAAIG,UAAWC,EAAAA,aAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,WAAeH,UAC7BC,EAAAA,EAAAA,KAACS,EAAAA,IAAc,CAACC,KAAK,aAEvBV,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,UAAcH,SAAEK,EAAMI,WALFJ,EAAM7B,OAbxC6B,EAAMO,UAuBV,QAKhB,C","sources":["components/Cast/Cast.module.css","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router';\nimport { BsPersonCircle } from 'react-icons/bs';\n\nimport css from './Cast.module.css';\n\nexport const Cast = () => {\n  const [movieActors, setMovieActors] = useState([]);\n  const id = useOutletContext();\n  const apiKey = '0ff4fc9e76b445d056f12e20a2c7c06f';\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`\n        );\n        setMovieActors(response.data.cast);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [id]);\n\n  return (\n    <div>\n      <div className={css.castTittleBox}>\n        <h2 className={css.castTittle}>Cast</h2>\n      </div>\n      <div className={css.actorsBox}>\n        {movieActors.map(actor => (\n          <div key={actor.credit_id}>\n            {actor.profile_path ? (\n              <ul className={css.listOfActors}>\n                <li className={css.movieElement} key={actor.id}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w185${actor.profile_path}`}\n                    alt={actor.name}\n                  />\n                  <p className={css.actorName}>{actor.name}</p>\n                </li>\n              </ul>\n            ) : (\n              <ul className={css.listOfActors}>\n                <li className={css.movieElement} key={actor.id}>\n                  <div className={css.emptyImage}>\n                    <BsPersonCircle size=\"150px\" />\n                  </div>\n                  <div>\n                    <p className={css.actorName}>{actor.name}</p>\n                  </div>\n                </li>\n              </ul>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"names":["Cast","_useState","useState","_useState2","_slicedToArray","movieActors","setMovieActors","id","useOutletContext","useEffect","fetchMovieCredits","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","cast","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","className","css","map","actor","profile_path","src","alt","name","BsPersonCircle","size","credit_id"],"sourceRoot":""}