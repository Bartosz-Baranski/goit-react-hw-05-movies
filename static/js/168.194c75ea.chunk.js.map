{"version":3,"file":"static/js/168.194c75ea.chunk.js","mappings":"6OACA,GAAiB,E,SCIJA,EAAU,WACrB,IAAAC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,GAAKC,EAAAA,EAAAA,MAmBX,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECC,MAAM,sCAADC,OACYd,EAAE,qBAAAc,OANjC,mCAM2D,oBAClE,KAAD,EAFa,OAARN,EAAQE,EAAAK,KAAAL,EAAAE,KAAA,EAGKJ,EAASQ,OAAO,KAAD,EAA5BP,EAAIC,EAAAK,KACVhB,EAAgBU,EAAKQ,SAASP,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAE9BS,QAAQC,MAAM,gCAA+BV,EAAAQ,IAAS,yBAAAR,EAAAW,OAAA,GAAAd,EAAA,mBAEzD,kBAVsB,OAAAH,EAAAkB,MAAA,KAAAC,UAAA,KAYvBpB,GACF,GAAG,CAACH,KAGFwB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,WAAeH,UAC7BC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,cAAkBH,SAAC,eAEpCC,EAAAA,EAAAA,KAAA,OAAAD,SACG3B,EAAa+B,OAAS,EACrB/B,EAAagC,KAAI,SAAAC,GAAM,OACrBL,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,cAAkBH,UAC/BD,EAAAA,EAAAA,MAAA,MAAIG,UAAWC,EAAAA,cAAkBH,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,WAAeH,SAAEM,EAAOC,UACtCN,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,cAAkBH,SAAEM,EAAOE,gBAJrCF,EAAO/B,GAOX,KAGR0B,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,UAAcH,SAAC,qBAMzC,C","sources":["components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router';\n\nimport css from './Reviews.module.css';\n\nexport const Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const id = useOutletContext();\n  const apiKey = '0ff4fc9e76b445d056f12e20a2c7c06f';\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}&language=en-US`\n        );\n        const data = await response.json();\n        setMovieReviews(data.results);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [id]);\n\n  return (\n    <div>\n      <div className={css.reviewsBox}>\n        <h2 className={css.reviewsTittle}>Reviews</h2>\n      </div>\n      <div>\n        {movieReviews.length > 0 ? (\n          movieReviews.map(review => (\n            <div key={review.id}>\n              <ul className={css.listOfReviews}>\n                <li className={css.reviewElement}>\n                  <p className={css.authorName}>{review.author}</p>\n                  <p className={css.reviewContent}>{review.content}</p>\n                </li>\n              </ul>\n            </div>\n          ))\n        ) : (\n          <div>\n            <p className={css.noReviews}>No reviews</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"names":["Reviews","_useState","useState","_useState2","_slicedToArray","movieReviews","setMovieReviews","id","useOutletContext","useEffect","fetchMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","json","results","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","className","css","length","map","review","author","content"],"sourceRoot":""}